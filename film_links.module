<?PHP


/**
 * @file
 * This holds the specific functions for slfilm website.
 */


function film_links_menu() {
  
  $items = array();

  $items['admin/config/film_links'] = array(
    'title' => 'Film links',
    'description' => 'Sets the default user status',
    'position' => 'left',
    'weight' => -100,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  
  $items['admin/config/film_links/settings'] = array(
    'title' => t('Settings'),
    'page callback' => 'film_links_settings',
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_NORMAL_ITEM, 
  );
  
  $items['admin/config/film_links/settings/test'] = array(
    'title' => t('Settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -100,      
  );
  
  $items['admin/config/film_links/settings/roles'] = array(
    'title' => t('Roles'),
    //'page callback' => 'film_links_role_settings',
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_role_add'),        
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_LOCAL_TASK,   
    'weight' => 10,
  );
   
  
  $items['admin/config/film_links/settings/roles/delete/%'] = array(
    'title' => t('Delete role'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_role_delete',6),      
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_CALLBACK,   
    'weight' => 10,
  );  

  $items['admin/config/film_links/settings/roles/edit/%'] = array(
    'title' => t('Edit role'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_role_edit',6),      
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_NORMAL_ITEM,   
    'weight' => 10,
  );   
  
  $items['admin/config/film_links/settings/subroles/%'] = array(
    'title' => t('Edit role'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_sub_roles',5),      
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_NORMAL_ITEM,   
    'weight' => 10,
  );   
  
  $items['admin/config/film_links/settings/subroles/edit/%'] = array(
    'title' => t('Edit sub role'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_sub_role_edit',6),      
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_NORMAL_ITEM,   
    'weight' => 10,
  );     

  $items['admin/config/film_links/settings/subroles/delete/%'] = array(
    'title' => t('Delete sub role'),
    'page callback' => 'drupal_get_form',
    'page arguments' =>  array('film_links_sub_role_delete',6),      
    'access arguments' => array('administer site configuration'),
    'file' => 'film_links.admin.inc',
    'type' => MENU_NORMAL_ITEM,   
    'weight' => 10,
  );     

 
  $items['js/film_links/role_search'] = array(
    'page callback' => '_film_link_role_autocomplete',
    'access callback' => true , //array('access example autocomplete'),
    'type' => MENU_CALLBACK
  ); 

  $items['js/film_links/subrole_search'] = array(
    'page callback' => '_film_link_subrole_list_ajax',
    'access callback' => TRUE, //array('access example autocomplete'), 
    'type' => MENU_CALLBACK
  );

  
  $items['film-link/delete/%'] = array(
    'page callback' => '_film_link_role_delete',
    'page arguments' =>  array(2),
    'access callback' => true , //array('access example autocomplete'),
    'file' => 'film_links.delete.inc',    
    'type' => MENU_NORMAL_ITEM
  );   
//  
//  $items['help_popup/get_details'] = array(
//    'page callback' => '_help_popup_film_links_details_ajax',
//    'access callback' => TRUE,
//    'type' => MENU_CALLBACK,
//  );
    
  return $items;
}

  function film_links_js() {
    return array(
      'role_search' => array(
        'callback'     => '_film_link_role_autocomplete',
//        'includes'     => array('theme', 'unicode'),
//        'dependencies' => array('locale', 'filter', 'node'),
        'bootstrap'    => DRUPAL_BOOTSTRAP_CONSTANT,
//        'file'         => 'film_general.module',
//        'access arguments' => array('permission'),
//        'access callback'  => 'callback function',
 //       'page arguments'  => array(1)
      ),      
      'subrole_search' => array(
        'callback'     => '_film_link_subrole_list_ajax',
        'bootstrap'    => DRUPAL_BOOTSTRAP_CONSTANT,
      ),      
    );
  }
    

/**
 * Implements hook_permission().
 *
 * We want to let site administrators figure out who should
 * be able to view, edit, and administer our field.
 *
 * Field permission operations can only be view or edit, in the
 * context of one's own content or that of others. Constrast
 * with content types where we also have to worry about who can
 * create or delete content.
 */
function film_links_permission() {

  $perms['delete any film link status'] = array('title' => t('Delete any film link'));
  $perms['edit people'] = array('title' => t('Edit people'));
  $perms['edit films'] = array('title' => t('Edit films'));

  return $perms;
}

function _film_link_role_autocomplete($string) {
  $matches = array();
//  watchdog('_film_link_role_autocomplete',$string);
  // Some fantasy DB table which holds cities
  $query = db_select('film_link_role', 'r');
 
  // Select rows that match the string

  $query->fields('r', array('name','rid'));
  $query->isNull('r.pid');
  $query->condition('r.name', '%' . db_like($string) . '%', 'LIKE');
  $query->orderBy('r.name');
  $query->range(0, 18);
  $return = $query->execute();
 
  // add matches to $matches  
  foreach ($return as $row) {
    $matches[$row->name] = check_plain($row->name);
  }
 
  // return for JS
  drupal_json_output($matches);
}

function _film_link_subrole_list_ajax() {
  $matches['_none'] = '--';

  $role = $_POST['role'];
  if (!empty($role)) {
    $matches = _film_link_get_subroles($role);

    $role_details = film_links_get_role_details(NULL,NULL,$role);
    if (!empty($role_details)) {
      $matches['role_details'] = $role_details['film_character'];
    }
  }
  $matches['_other'] = 'Other';  
  // return for JS
  drupal_json_output($matches);
}

function _film_link_get_subroles($role) {
  $matches = array();
  $role_details = film_links_get_role_details(NULL, NULL, $role);
  if (!empty($role_details)) {
    // Some fantasy DB table which holds cities
    $query = db_select('film_link_role', 'r');

    // Select rows that match the string
    $query->fields('r', array('name','rid'));
    $query->condition('r.pid',$role_details['rid'],'=');
    //$query->range(0, 10);
    $return = $query->execute();

    // add matches to $matches  
    foreach ($return as $row) {
      $matches[$row->rid] = check_plain($row->name);
    }
  }
  return $matches;
}

function film_links_get_role_details($rid = NULL,$pid = NULL, $role_name = NULL) {
  $query = db_select('film_link_role','r');
  if(!empty($role_name)) {
    $query->condition('r.name',$role_name,'=');
  }
  
  if(!empty($rid)) {  
  $query->condition('r.rid',$rid,'=');
  }
  
  if(!empty($pid)) {
    $query->condition('r.pid',$pid,'=');
  } else {
    $query->isNull('r.pid');
  }
  $query->fields('r', array('rid','pid','name','film_character'));
  
  $result = $query->execute();
  
  $role = array();
  
  foreach($result as $row) {
    $role['name'] = $row->name;
    $role['rid'] = $row->rid;
    $role['pid'] = $row->pid;
    $role['film_character'] = $row->film_character;
  }
  
  return $role;
}

function _film_links_details_ajax () {
  $data = array();
  
  // Retrieve the slider value
  $field_name = $_POST['field_name'];
  $bundle = $_POST['bundle']; 
  $entity_type = $_POST['entity_type'];

  $items = _help_popup_load($bundle,$entity_type,$field_name);
  if (!empty($items[0]->help_popup_value))
    $data[0]['help_popup_value'] = $items[0]->help_popup_value;

  drupal_json_output($data);
}

function film_links_add($film_id,$person_id,$role_id,$sub_role_id,$character = NULL) {
  $query = db_insert('film_link');
  $query->fields(
    array (
      'fid' => $film_id,
      'pid' => $person_id,
      'rid' => $role_id,
      'srid' => $sub_role_id,
      'film_character' => $character,
    )
  );
  
  try {
    $query->execute();
  } catch (Exception $e) {
    drupal_set_message(t('An error occurred inserting a help item. Check the log files for more information'),'error');
    watchdog('film_link','Error inserting item : ' . $e,NULL,WATCHDOG_ERROR);      
    return FALSE;
  }  
  return TRUE;
}

function _film_links_update($film_id,$person_id,$role_id,$sub_role_id,$character,$description = NULL) {
  // Update the database
  $query = db_update('film_link');
  $query->fields(
      array(
        'film_character' => $value,
        //'description' => $format,
      )
    );
  $query->condition('fid',$film_id,'=');
  $query->condition('pid',$person_id,'=');
  $query->condition('rid',$role_id,'=');
  $query->condition('srid',$sub_role_id,'=');
  try {
    $query->execute();
  } catch (Exception $e) {
    drupal_set_message(t('An error occurred updating a person link. Check the log files for more information'),'error');
    watchdog('film_link','Error updating item : ' . $e,NULL,WATCHDOG_ERROR);      
    return FALSE;
  }
  return TRUE;
}
function _film_links_delete($film_id,$person_id,$role_id,$sub_role_id) {
  $query = db_delete('film_link');
  $query->condition('fid',$film_id,'=');
  $query->condition('pid',$person_id,'=');
  $query->condition('rid',$role_id,'=');
  $query->condition('srid',$sub_role_id,'=');
  try {
    $query->execute();
  } catch (Exception $e) {
    drupal_set_message(t('An error occurred removing a person link. Check the log files for more information'),'error');
    watchdog('film_link','Error removing item : ' . $e,NULL,WATCHDOG_ERROR);
    return FALSE;
  }
  return TRUE;
}
function _film_links_exist($film_id,$person_id,$role_id,$sub_role_id) {
  $query = db_select('film_link', 'l');
  $query->condition('l.fid',$film_id,'=');
  $query->condition('l.pid',$person_id,'=');
  $query->condition('l.rid',$role_id,'=');
  $query->condition('l.srid',$sub_role_id,'=');
  $query->condition('r.pid',NULL,'=');
  $query->fields('l',array('fid','film_character'));
  
  $result = $query->execute(); //->fetchAllAssoc();
  
  $item_found = FALSE;
  foreach($result as $row) {
    $item_found = TRUE;
  }
  
  return $item_found;
}

function film_links_get_link_table($film_id=NULL,$person_id = NULL, $role = NULL, $role_exclude = NULL, $show_role = FALSE) {
  $output = film_links_get_links($film_id,$person_id, $role, $role_exclude, $show_role);
  return drupal_render($output);
}
/**
 * Get list of films / people / characters
 * Either the filmID or the person ID needs to be NULL. Otherwise we will assume
 * just the film ID is provided.
 */
function film_links_get_links($film_id=NULL,$person_id = NULL, $role = NULL, $role_exclude = NULL, $show_role = FALSE, $show_edit = TRUE) {
//  $header = array();
//  if (!empty($film_id)) {
//    if ($show_role == TRUE)  $header[] = array('data' => t('Role'), 'field' => 'role');
//    $header[] = array('data' => t('Person'), 'field' => 'person');
//    $header[] = array('data' => t('Character'), 'field' => 'character');
//    //$header[] = array('data' => t('Sub role'), 'field' => 'sub_role'); 
//  } else {
//    if ($show_role == TRUE) $header[] = array('data' => t('Role'), 'field' => 'role');
//    $header[] = array('data' => t('Film'), 'field' => 'film');
//    $header[] = array('data' => t('Character'), 'field' => 'character');
//    //$header[] = array('data' => t('Sub role'), 'field' => 'sub_role');
//  }
//  
//  if (user_access('delete any film link status')) {
//    $header[] = array('data' => ' ', 'field' => 'delete');
//  }
  
  $query = db_select('film_link','l');
  if (!empty($film_id)) {
    $query->condition('l.fid',$film_id,'=');
  }

  if (!empty($person_id)) {
    $query->condition('l.pid',$person_id,'=');
  }

  if (!empty($role)) {
    $query->condition('l.rid',$role,'IN');
  }
  
  if (!empty($role_exclude)) {
    $query->condition('l.rid',$role_exclude,'NOT IN');
  }
  
  $query->leftJoin('node','p','p.nid = l.pid'); // Person
  $query->leftJoin('node','f','f.nid = l.fid');  // Film
  $query->leftJoin('film_link_role','r','r.rid = l.rid'); // Role
  $query->leftJoin('film_link_role','sr','sr.rid = l.srid'); // Sub role
  
  $query->addField('l', 'lid','link_id');
  $query->addField('l', 'fid','film_id');
  $query->addField('l', 'pid','person_id');
  $query->addField('l', 'rid','role_id');
  $query->addField('l', 'film_character','film_character');
  
  $query->addField('p', 'title', 'person');
  $query->addField('p', 'nid', 'person_nid');
  $query->addField('f', 'title', 'film');
  $query->addField('r', 'name' , 'role');
  $query->addField('sr','name' , 'subrole');
  $query->orderBy('r.name');
  $result = $query->execute();

  $rows = array();
  $results = '';
  $results_role = '';
  $results_character = '';
  $results_person = '';
  $results_film = '';
  
  $module_path = drupal_get_path('module', 'film_links');
  foreach($result  as $row) {
    if ($show_role == TRUE) {
//      $rows[$row->link_id]['role'] = $row->role;
      $results_role = $row->role;
    }
    // Will need to add the character and sub role here as well.
    $edit_link = '';
    
    if (!empty($row->film_character)) {
//      $rows[$row->link_id]['film_character'] = $row->film_character;
      $results_character =  $row->film_character;
    } else {
      // No character specified
//      $rows[$row->link_id]['film_character'] = '&nbsp;';    
      $results_character = '';
    }
     
    if (!empty($film_id)) {
//      $rows[$row->link_id]['person'] = l($row->person,url('node/' . $row->person_id, array('absolute' => TRUE)));
      $results_person = l($row->person,url('node/' . $row->person_id, array('absolute' => TRUE)));
      $options = array(
               'attributes' => array(
                 'class' => array('edit-link'),
               ),
               'html' => TRUE,
             );  
      
      //$edit_link .=  '<div class="edit-link">' . l('<img src="/' . $module_path . '/image/edit.png" />', 'node/' . $row->person_id . '/edit', $options) . '</div>';      
      if (user_access('edit people')) {
        $edit_link = l('<img src="/' . $module_path . '/image/edit.png" />', 'node/' . $row->person_id . '/edit', $options);
      }
        
    } 
    
    if (!empty($person_id)) {
//      $rows[$row->link_id]['film'] = l($row->film,url('node/' . $row->film_id, array('absolute' => TRUE)));
      $results_film = l($row->film,url('node/' . $row->film_id, array('absolute' => TRUE)));
      $options = array(
               'attributes' => array(
                 'class' => array('edit-link'),
               ),
               'html' => TRUE,
             );      
      //$edit_link .=  '<div class="edit-link">' . l('<img src="/' . $module_path . '/image/edit.png" />', 'node/' . $row->film_id . '/edit', $options) . '</div>';      
      if (user_access('edit films')) {
        $edit_link = l('<img src="/' . $module_path . '/image/edit.png" />', 'node/' . $row->film_id . '/edit', $options);
      }
      
    }
    
    $delete_link = '';
    
//    $rows[$row->link_id]['sub_role'] = $row->subrole;
    if (user_access('delete any film link status')) {
//      $destination = drupal_get_destination();
//      $rows[$row->link_id]['delete'] = array(
//        'data' => array(
//          '#type' => 'link',
//          '#title' => 'delete',
//          '#href' => 'film-link/delete/' . $row->link_id,
//          '#options' => array('query' =>$destination),
//        ),  
//      );
      
      $options = array(
               'attributes' => array(
                 'class' => array('delete-link'),
               ),
               'html' => TRUE,
             );  
      
//      $delete_link .=  '<div class="delete-link">' . l('<img src="/' . $module_path . '/image/delete.png" />', 'film-link/delete/' . $row->link_id, $options) . '</div>';      
      $delete_link =   l('<img src="/' . $module_path . '/image/delete.png" />', 'film-link/delete/' . $row->link_id, $options);      
  
    }
    
    // WE now build up the line of information
    if (!empty($person_id)) {
 
      $result1 = '';
      
      if (!empty($results_film)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_film;
        else $result1 .= $results_film;
      }      
      if (!empty($results_role)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_role;
        else $result1 .= $results_role;
      } 
      if (!empty($results_person)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_person;
        else $result1 .= $results_person;
      } 
      
      if (!empty($results_character)) {
        if (!empty($result1)) $result1 .= ' played ' . $results_character;
        else $result1 .= $results_character;
      }
             
      $results .= $result1;
    } else {
      $result1 = '';

      if (!empty($results_role)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_role;
        else $result1 .= $results_role;
      }      
      if (!empty($results_character)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_character;
        else $result1 .= $results_character;
      }

      if (!empty($results_person)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_person;
        else $result1 .= $results_person;
      } 
      if (!empty($results_film)) {
        if (!empty($result1)) $result1 .= ' : ' . $results_film;
        else $result1 .= $results_film;
      }      
      
      $results .= $result1;      
    }   
    
    if ($show_edit == TRUE) {
      $results .= $edit_link . $delete_link . '<br />';
    } else {
      $results .= '<br />';      
    }
  }

  ////  $output['table'] = array(
//    '#theme' => 'table',
//    '#header' => $header,
//    '#rows' => $rows,
//   // '#empty' => t('There are no roles.'),
//  );
  
  if (empty($results)) {
    $results = '<div></div>';
    $output = '';
  } else {
  
  $output['table'] = array(
   '#markup' => $results,
  );
  }
  return $output;  
}

/*
 * We save the item to the database
 */
function film_links_role_save($role_name,$role_parent_id = NULL,$character = 0) {
  //
  $query = db_insert('film_link_role');
  $query->fields(
    array (
      'pid' => $role_parent_id,
      'name' => $role_name,
      'deleted' => 0,
      'film_character' => $character,
    )
  );
  try {
    $lastid = $query->execute();
  } catch (Exception $e) {
    drupal_set_message(t('An error occurred inserting a role item. Check the log files for more information'),'error');
    watchdog('film_links','Error inserting item : ' . $e,NULL,WATCHDOG_ERROR);      
    return FALSE;
  }
  return $lastid;      
}
 
 
